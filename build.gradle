plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.145'
}

version = '1.20.1-7.0.11'
group = 'com.blakebr0.cucumber'

base {
    archivesName = 'Cucumber'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

minecraft {
    accessTransformers {
        file('src/main/resources/META-INF/accesstransformer.cfg')
    }
}

runs {
    configureEach {
        systemProperty 'forge.logging.markers', 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'

        modSource project.sourceSets.main
    }
}

configurations {
    runtimeClasspath.extendsFrom localRuntime
}

repositories {
    maven {
        url = 'https://maven.blamejared.com/'
        content {
            includeGroup "com.almostreliable.mods"
        }
    }

    maven {
        url = "https://maven.architectury.dev"
        content {
            includeGroup "dev.architectury"
        }
    }

    maven {
        url = "https://maven.latvian.dev/releases"
        content {
            includeGroup "dev.latvian.mods"
        }
    }
}

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"

//    annotationProcessor "org.spongepowered:mixin:${mixin_processor_version}:processor"
//
    implementation "dev.latvian.mods:kubejs-neoforge:${kubejs_version}"
    implementation "dev.latvian.mods:rhino-neoforge:${rhino_version}"
    implementation "dev.architectury:architectury-neoforge:${architectury_version}"

    compileOnly "com.almostreliable.mods:almostunified-forge:${almostunified_version}"
}

//mixin {
//    add sourceSets.main, 'cucumber.refmap.json'
//    config 'cucumber.mixins.json'
//
//    debug.verbose = true
//    debug.export = true
//}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            mod_version            : version.split('-').last(),
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/neoforge.mods.toml']) {
        expand replaceProperties
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            artifact jar
        }
    }

    repositories {
        maven {
            url = 'https://maven.blakesmods.com'

            credentials {
                username = System.getenv('BLAKESMODS_MAVEN_USERNAME')
                password = System.getenv('BLAKESMODS_MAVEN_PASSWORD')
            }

            authentication {
                basic(BasicAuthentication)
            }
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}